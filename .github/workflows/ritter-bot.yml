---
name: Ritter bot deployment
on:
  schedule:
    - cron: "0 1/1 * * *"
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  run-python-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master branch of the repo  
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Setup python and pip
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
      - name: Install required modules from requirements.txt
        run: |
          # Iinstalling required modules
          pip install -r requirements.txt
      - name: Provide env variables and run the script
        env:
          Bearer_Token: ${{ secrets.Bearer_Token }}
          API_Key: ${{ secrets.API_KEY }}
          API_Key_Secret: ${{ secrets.API_Key_Secret }}
          Access_Token: ${{ secrets.Access_Token }}
          Access_Token_Secret: ${{ secrets.Access_Token_Secret }}
        run: python app.py
  commit-log-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout deployment branch of the repo  
        uses: actions/checkout@v3
        with:
          ref: deployment
      - name: Setup git config with name and email
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Check if log files folder exists
        run: |
          if [ -d "log_files" ]
          then
            echo "log_files exists"
            echo "log_files_exists=true" >> $GITHUB_ENV
          else
            echo "log_files does not exist"
            echo "log_files_exists=true" >> $GITHUB_ENV
          fi
      - name: Commit log_files if it exists
        if: env.log_files_exists
        run: |
          # Stages log_files, commits and pushes
          git checkout deployment
          git add -AN
          git add log_files -f
          git commit -m "Updated log_files"
          git push origin deployment
      - name: Check if old log files folder exists
        run: |
          if [ -d "old_log_files" ]
          then
            echo "old_log_files exists"
            echo "old_log_files_exists=true" >> $GITHUB_ENV
          else
            echo "old_log_files does not exist"
            echo "old_log_files_exists=true" >> $GITHUB_ENV
          fi
      - name: Commit old_log_files if it exists
        if: env.old_log_files_exists
        run: |
          # Stages old_log_files, commits and pushes
          git checkout deployment
          git add -AN
          git add old_log_files -f
          git commit -m "Updated_log_files"
          git push origin deployment
...